== To create a module in git use this command ==
go mod init github.com/dinudk02/binarycode   "change the last path based on ur module ex "binarycode"
===

== To add module to ur project ==
go mod tidy
===

== To build the project ==
go build 
===

== To build and run the binarycode file use this for vs code terminal ==
go build; if ($?) { ./binarycode }
===

== To create a git repo and push it ==
git init

===

== package for getting port value to other files ==
go get github.com/joho/godotenv

1)To copy the code into vs code run the below commands in order 
go mod vendor
go mod tidy 
go mod vendor

hint: for every change to do in any file run build and binary file as given command 
go build; if ($?) { ./binarycode } "the binarycode can be ur file name"
===

== For router we use chi ==
go get -u github.com/go-chi/chi        
go get -u github.com/go-chi/cors  "packages "

hint is you installing any git code or package run this command 
go mod vendor
go mod tidy
go mod vendor
===

== After creating the [pstgresql and pg admin] ==
create the new data base (if the icon is gold color then the server is running in your machine )
===

===After pg admin is running install this package in ur project in vs code ==
SQLC
go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
sqlc version

Install Goose
go install github.com/pressly/goose/v3/cmd/goose@latest
goose -version  

====

=== create an table in ur new db using sql file in vscode ===
1) create a directory path src/schema
2) cd src/schema
3) create this directory 
mkdir migrations
4) create a file in migrations directory with .sql extension
New-Item -Path .\migrations\ -Name "202406171200_create_users_table.sql" -ItemType "file"
5) write the sql code in the file
6)And run this commands where change the username and password based on your db
goose -dir ./migrations postgres "postgres://username:password@localhost:5432/rssagg?sslmode=disable" up
7) now go and check the db-> schemas -> table 
you can now see your new table with your field names and run this sql query
SELECT * FROM users;    " to check it works good "
   

== database driver ==
go get github.com/lib/pq
go mod vendor
go mod tidy
go mod vendor
===

=== for uuid ===
go get github.com/google/uuid

===

== for api call use gin framework ==
go get github.com/gin-gonic/gin
go mod vendor
go mod tidy
go mod vendor
===
=======================================================
== api call using db == the below are steps

== when ever there is a change it auto rebuild and runs it by using daemon==
https://github.com/sevlyar/go-daemon

go get github.com/githubnemo/CompileDaemon
go install github.com/githubnemo/CompileDaemon
==

== to load the env varibale easily install this ==
https://github.com/joho/godotenv

go get github.com/joho/godotenv
go install github.com/joho/godotenv
==

== for api call use gin framework ==
https://gin-gonic.com/docs/quickstart/

go get github.com/gin-gonic/gin
go mod vendor
go mod tidy
go mod vendor
===

== ORM library for go lang==
go get -u gorm.io/gorm

for database driver 
go get -u gorm.io/driver/postgres

==

== to run this configuration use this ==
CompileDaemon -command="./golang"

=============================================================